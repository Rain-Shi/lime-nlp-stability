---
title: "Dataset Overview"
format: html
jupyter: python3
---

## Dataset Description

This project uses the **Twitter Entity Sentiment Analysis** dataset. It consists of two files:

- `twitter_training.csv`: Main training dataset  
- `twitter_validation.csv`: Validation dataset

Each row contains:
- an **ID**
- a **target entity**
- the **sentiment label**: `Positive`, `Neutral`, or `Negative`
- a **tweet**

The task is to predict the sentiment expressed toward the entity.

---

## Load Data

```{python}
import pandas as pd

# Define column names
col_names = ["id", "entity", "sentiment", "tweet"]

# Load CSVs with no header row
train = pd.read_csv("data/twitter_training.csv", header=None, names=col_names)
valid = pd.read_csv("data/twitter_validation.csv", header=None, names=col_names)

# Remove rows with missing or empty tweets
print(train.isnull().sum())

train = train.dropna(subset=["tweet"])
train = train[train["tweet"].str.strip().astype(bool)]
```

## Basic Statistics
```{python}
print("Training set shape:", train.shape)
print("Validation set shape:", valid.shape)
train.columns
```

##Sample Records (Training Set)
```{python}
train.sample(5)[["tweet", "entity", "sentiment"]]
```

##Check Missing Values
```{python}
train.isnull().sum()

```

##Sentiment Distribution (Train vs Validation)
```{python}
import seaborn as sns
import matplotlib.pyplot as plt

fig, axes = plt.subplots(1, 2, figsize=(12, 5))

sns.countplot(data=train, x="sentiment", ax=axes[0])
axes[0].set_title("Training Sentiment Distribution")

sns.countplot(data=valid, x="sentiment", ax=axes[1])
axes[1].set_title("Validation Sentiment Distribution")

plt.tight_layout()
plt.show()

```

##Summary
The training set has ~74k records, and the validation set has ~1k.

686 rows with missing or empty tweets were removed from the training set.

The sentiment distribution is imbalanced, with Neutral being the most common label.